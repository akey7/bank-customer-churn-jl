---
title: "Analyze Bank Customer Churn"
format:
  html:
    toc: true
    html-math-method: mathjax
    code-fold: false
---

```{julia}
#| label: using-things
#| eval: true
#| include: false

# Activate the proper Julia Project.toml
using Pkg
Pkg.activate("..", io=devnull)

using CairoMakie
using Random
using DataFrames
using PrettyTables

include("../src/BankCustomerChurn.jl")

Random.seed!(1234)
```

## Load Data

Load data and look at the first five rows.

```{julia}
#| label: load-data
#| eval: true
#| include: true

df = BankCustomerChurn.read_churn_data(joinpath("..", "input", "Churn Data Standardized.csv"))
pretty_table(first(df, 5))
```

## EDA 

```{julia}
#| label: box-plot-est-salary-vs-numofproducts
#| eval: true
#| include: true

boxplot_categories = df[!, :numofproducts]
boxplot_values = df[!, :estimated_salary_standardized]

fig = Figure()
ax = Axis(fig[1, 1], xlabel = "Number of Products", ylabel = "Standardized Estimated Salary", title = "Standardized Estimated Salary vs Number of Products", titlealign = :left, titlesize = 18)
boxplot!(ax, boxplot_categories, boxplot_values)
fig
```



```{julia}
#| label: scatter-age-vs-estimated-salary
#| eval: true
#| include: true

xs = df[!, :age_standardized]
ys = df[!, :estimated_salary_standardized]

fig = Figure()
ax = Axis(fig[1, 1], xlabel = "Standardized Estimated Salary", ylabel = "Account Age", title = "Account Age vs Standardized Estimated Salary", titlealign = :left, titlesize = 18)
scatter!(ax, xs, ys)
fig
```
