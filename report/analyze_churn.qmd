---
title: "Analyze Bank Customer Churn"
format:
  html:
    toc: true
    html-math-method: mathjax
    code-fold: false
---

```{julia}
#| label: using-things
#| eval: true
#| include: false

# Activate the proper Julia Project.toml
using Pkg
Pkg.activate("..", io=devnull)

using CairoMakie
using Random
using DataFrames
using PrettyTables
using FreqTables
using CategoricalArrays

include("../src/BankCustomerChurn.jl")

Random.seed!(1234)
```

## Load Data

Load data and look at the first five rows.

```{julia}
#| label: load-data
#| eval: true
#| include: true

df = BankCustomerChurn.read_churn_data(joinpath("..", "input", "Churn Data DT Prep V3.csv"))
pretty_table(first(df, 5))
```

## EDA 

```{julia}
#| label: box-plot-est-salary-vs-exited
#| eval: true
#| include: true

boxplot_categories = df[!, :exited]
boxplot_values = df[!, :estimated_salary]

fig = Figure()
ax = Axis(fig[1, 1], xlabel = "Exited", ylabel = "Estimated Salary", title = "Estimated Salary vs Exited", titlealign = :left, titlesize = 18)
boxplot!(ax, boxplot_categories, boxplot_values)
fig
```

```{julia}
#| label: box-plot-est-log-salary-vs-exited
#| eval: true
#| include: true

boxplot_categories = df[!, :exited]
boxplot_values = log10.(df[!, :estimated_salary])

fig = Figure()
ax = Axis(fig[1, 1], xlabel = "Exited", ylabel = "log10(Estimated Salary)", title = "log10(Estimated Salary) vs Exited", titlealign = :left, titlesize = 18)
boxplot!(ax, boxplot_categories, boxplot_values)
fig
```

```{julia}
#| label: box-plot-age-vs-exited
#| eval: true
#| include: true

boxplot_categories = df[!, :exited]
boxplot_values = df[!, :age]

fig = Figure()
ax = Axis(fig[1, 1], xlabel = "Exited", ylabel = "Age", title = "Age vs Exited", titlealign = :left, titlesize = 18)
boxplot!(ax, boxplot_categories, boxplot_values)
fig
```

```{julia}
#| label: cross-table-active-vs-exited
#| eval: true
#| include: true

df_copy = copy(df)
df_copy.exited = categorical(df_copy.exited)
df_copy.is_active_member  = categorical(df_copy.is_active_member)
cross_table = freqtable(df_copy, :exited, :is_active_member)
cross_table
```
